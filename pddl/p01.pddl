(define (problem grid3by3) (:domain grid)
(:objects 
    droplet1 droplet2 - droplet
)

(:init
    (droplet-at droplet1 x2 y2)
    (droplet-at droplet2 x4 y4)
    (occupied x2 y2)
    (occupied x4 y4)

    (NEIGHBOUR x1 y1 x1 y2)
    (NEIGHBOUR x1 y1 x2 y1)
    (NEIGHBOUR x1 y2 x1 y3)
    (NEIGHBOUR x1 y2 x1 y1)
    (NEIGHBOUR x1 y2 x2 y2)
    (NEIGHBOUR x1 y3 x1 y2)
    (NEIGHBOUR x1 y3 x2 y3)
    (NEIGHBOUR x2 y1 x2 y2)
    (NEIGHBOUR x2 y1 x3 y1)
    (NEIGHBOUR x2 y1 x1 y1)
    (NEIGHBOUR x2 y2 x2 y3)
    (NEIGHBOUR x2 y2 x2 y1)
    (NEIGHBOUR x2 y2 x3 y2)
    (NEIGHBOUR x2 y2 x1 y2)
    (NEIGHBOUR x2 y3 x2 y2)
    (NEIGHBOUR x2 y3 x3 y3)
    (NEIGHBOUR x2 y3 x1 y3)
    (NEIGHBOUR x3 y1 x3 y2)
    (NEIGHBOUR x3 y1 x2 y1)
    (NEIGHBOUR x3 y2 x3 y3)
    (NEIGHBOUR x3 y2 x3 y1)
    (NEIGHBOUR x3 y2 x2 y2)
    (NEIGHBOUR x3 y3 x3 y2)
    (NEIGHBOUR x3 y3 x2 y3)

    (VICINITY x1 y1 x1 y2)
    (VICINITY x1 y1 x2 y2)
    (VICINITY x1 y1 x2 y1)
    (VICINITY x1 y2 x1 y3)
    (VICINITY x1 y2 x2 y3)
    (VICINITY x1 y2 x1 y1)
    (VICINITY x1 y2 x2 y2)
    (VICINITY x1 y2 x2 y1)
    (VICINITY x1 y3 x1 y2)
    (VICINITY x1 y3 x2 y3)
    (VICINITY x1 y3 x2 y2)
    (VICINITY x2 y1 x2 y2)
    (VICINITY x2 y1 x3 y2)
    (VICINITY x2 y1 x3 y1)
    (VICINITY x2 y1 x1 y1)
    (VICINITY x2 y1 x1 y2)
    (VICINITY x2 y2 x2 y3)
    (VICINITY x2 y2 x3 y3)
    (VICINITY x2 y2 x2 y1)
    (VICINITY x2 y2 x1 y1)
    (VICINITY x2 y2 x3 y2)
    (VICINITY x2 y2 x3 y1)
    (VICINITY x2 y2 x1 y2)
    (VICINITY x2 y2 x1 y3)
    (VICINITY x2 y3 x2 y2)
    (VICINITY x2 y3 x1 y2)
    (VICINITY x2 y3 x3 y3)
    (VICINITY x2 y3 x3 y2)
    (VICINITY x2 y3 x1 y3)
    (VICINITY x3 y1 x3 y2)
    (VICINITY x3 y1 x2 y1)
    (VICINITY x3 y1 x2 y2)
    (VICINITY x3 y2 x3 y3)
    (VICINITY x3 y2 x3 y1)
    (VICINITY x3 y2 x2 y1)
    (VICINITY x3 y2 x2 y2)
    (VICINITY x3 y2 x2 y3)
    (VICINITY x3 y3 x3 y2)
    (VICINITY x3 y3 x2 y2)
    (VICINITY x3 y3 x2 y3)
)

(:goal (and
    (droplet-at droplet1 x2 y3)
    (droplet-at droplet2 x4 y4)
))
)
